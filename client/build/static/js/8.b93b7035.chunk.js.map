{"version":3,"sources":["redux/directory/directory.selectors.js","components/menu-item/menu-item.styles.jsx","components/menu-item/menu-item.component.jsx","components/directory/directory.styles.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx"],"names":["selectDirectorySections","createSelector","state","directory","sections","MenuItemContainer","styled","div","size","BackgroundImageContainer","imageUrl","ContentContainer","ContentTitle","span","ContentSubtitle","withRouter","title","history","linkUrl","match","t","useTranslation","onClick","push","url","className","toUpperCase","DirectoryMenuContainer","mapStateToProps","createStructuredSelector","connect","map","id","otherSectionProps","pos","HomePageContainer","HomePage","onRender","phase","actualDuration","console","log"],"mappings":"mLAIaA,EAA0BC,YACrC,CAHsB,SAAAC,GAAK,OAAIA,EAAMC,aAIrC,SAAAA,GAAS,OAAIA,EAAUC,Y,gCCJZC,EAAoBC,IAAOC,IAAV,0oBACnB,qBAAGC,KAAmB,QAAU,WAqC9BC,EAA2BH,IAAOC,IAAV,kJAKf,gBAAGG,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAAmBL,IAAOC,IAAV,kQAahBK,EAAeN,IAAOO,KAAV,gHAOZC,EAAkBR,IAAOO,KAAV,yE,OCpCbE,eApBE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAON,EAA8C,EAA9CA,SAAUF,EAAoC,EAApCA,KAAMS,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACnDC,EAAMC,cAAND,EAER,OACA,eAACf,EAAD,CACEG,KAAMA,EACNc,QAAS,kBAAML,EAAQM,KAAR,UAAgBJ,EAAMK,KAAtB,OAA4BN,KAF7C,UAIE,cAACT,EAAD,CACEgB,UAAU,mBACVf,SAAUA,IAEZ,eAACC,EAAD,CAAkBc,UAAU,UAA5B,UACE,cAACb,EAAD,UAAeQ,EAAE,GAAD,OAAIJ,EAAMU,kBAC1B,cAACZ,EAAD,UAAkBM,EAAE,sBCxBbO,EAAyBrB,IAAOC,IAAV,qH,SCgB7BqB,EAAkBC,YAAyB,CAC/CzB,SAAUJ,IAGG8B,cAAQF,EAARE,EAZG,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAH,OAChB,cAACuB,EAAD,UACGvB,EAAS2B,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,EAAV,wBACZ,cAAC,EAAD,2BAAuBA,GAAvB,IAA0CC,IAAOF,IAAlCA,WCXRG,EAAoB7B,IAAOC,IAAV,iGCoBf6B,UAhBE,kBACf,cAACD,EAAD,UACE,cAAC,WAAD,CACEH,GAAG,YAAYK,SAAU,SAACL,EAAIM,EAAOC,GACnCC,QAAQC,IAAI,CACVT,KACAM,QACAC,oBALN,SASE,cAAC,EAAD","file":"static/js/8.b93b7035.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectDirectory = state => state.directory;\r\n\r\nexport const selectDirectorySections = createSelector(\r\n  [selectDirectory],\r\n  directory => directory.sections\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const MenuItemContainer = styled.div`\r\n\theight: ${({ size }) => (size ? '380px' : '240px')};\r\n\tmin-width: 30%;\r\n\toverflow: hidden;\r\n\tflex: 1 1 auto;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tborder: 1px solid black;\r\n\tmargin: 0 7.5px 15px;\r\n\toverflow: hidden;\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\r\n\t\t& .background-image {\r\n\t\t\ttransform: scale(1.1);\r\n\t\t\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\r\n\t\t}\r\n\r\n\t\t& .content {\r\n\t\t\topacity: 0.9;\r\n\t\t}\r\n\t}\r\n\r\n\t&:first-child {\r\n    margin-right: 7.5px;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-left: 7.5px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n        height: 200px;\r\n    }\r\n`;\r\n\r\nexport const BackgroundImageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  height: 90px;\r\n  padding: 0 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n`;\r\n\r\nexport const ContentTitle = styled.span`\r\n  font-weight: bold;\r\n  margin-bottom: 6px;\r\n  font-size: 22px;\r\n  color: #4a4a4a;\r\n`;\r\n\r\nexport const ContentSubtitle = styled.span`\r\n  font-weight: lighter;\r\n  font-size: 16px;\r\n`;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  MenuItemContainer,\r\n  BackgroundImageContainer,\r\n  ContentContainer,\r\n  ContentTitle,\r\n  ContentSubtitle\r\n} from './menu-item.styles';\r\n\r\nconst MenuItem = ({ title, imageUrl, size, history, linkUrl, match }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n  <MenuItemContainer\r\n    size={size}\r\n    onClick={() => history.push(`${match.url}${linkUrl}`)}\r\n  >\r\n    <BackgroundImageContainer\r\n      className='background-image'\r\n      imageUrl={imageUrl}\r\n    />\r\n    <ContentContainer className='content'>\r\n      <ContentTitle>{t(`${title.toUpperCase()}`)}</ContentTitle>\r\n      <ContentSubtitle>{t('shopNow')}</ContentSubtitle>\r\n    </ContentContainer>\r\n  </MenuItemContainer>\r\n);\r\n}\r\n\r\nexport default withRouter(MenuItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const DirectoryMenuContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors';\r\n\r\nimport MenuItem from '../menu-item/menu-item.component';\r\n\r\nimport { DirectoryMenuContainer } from './directory.styles';\r\n\r\nconst Directory = ({ sections }) => (\r\n  <DirectoryMenuContainer>\r\n    {sections.map(({ id, ...otherSectionProps }) => (\r\n      <MenuItem key={id} {...otherSectionProps} pos = {id} />\r\n    ))}\r\n  </DirectoryMenuContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  sections: selectDirectorySections\r\n});\r\n\r\nexport default connect(mapStateToProps)(Directory);\r\n","import styled from 'styled-components';\r\n\r\nexport const HomePageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React, { Profiler } from 'react';\r\n\r\nimport Directory from '../../components/directory/directory.component';\r\n\r\nimport { HomePageContainer } from './homepage.styles';\r\n\r\nconst HomePage = () => (\r\n  <HomePageContainer>\r\n    <Profiler\r\n      id='Directory' onRender={(id, phase, actualDuration) => {\r\n        console.log({\r\n          id,\r\n          phase,\r\n          actualDuration\r\n        });\r\n      }}\r\n    >\r\n      <Directory />\r\n    </Profiler>\r\n  </HomePageContainer>\r\n);\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}