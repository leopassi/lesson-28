{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","t","useTranslation","className","onClick","inverted","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","match","params","collectionId","title","items","id","mapStateToProps","createStructuredSelector","compose","CollectionPage"],"mappings":"oHAAA,oJAEMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG7DC,EAAmB,SAAAC,GAAkB,OAChDR,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAGvDC,EAA6BT,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAGFC,EAA4BX,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,8EC1BJW,EAAiBC,IAAOC,IAAV,mIAQdC,EAAmBF,IAAOC,IAAV,+c,uBCQdE,IAdK,SAAAC,GAWlB,OAVgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,iBAChD,OAAOD,EACL,cAACN,EAAD,UACE,cAACG,EAAD,MAIA,cAACE,EAAD,eAAsBE,O,sGCTjBC,EAA0BP,IAAOC,IAAV,oWAwBvBO,EAAYR,YAAOS,IAAPT,CAAH,qPAcTU,EAAkBV,IAAOC,IAAV,wKAMN,gBAAGU,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BZ,IAAOC,IAAV,oIAQzBY,EAAgBb,IAAOc,KAAV,mEAKbC,EAAiBf,IAAOc,KAAV,iE,OC1BZE,gBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EAtBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SACbW,EAAMC,cAAND,EAER,OACE,eAACf,EAAD,WACE,cAACG,EAAD,CAAiBc,UAAU,QAAQb,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBS,EAAE,GAAD,OAAIF,MACrB,cAACL,EAAD,UAAiBM,OAEnB,cAACb,EAAD,CAAWiB,QAAS,kBAAMP,EAAQC,IAAOO,UAAQ,EAAjD,SACGJ,EAAE,wB,oICzBEK,EAA0B3B,IAAOC,IAAV,yEAKvB2B,EAAkB5B,IAAO6B,GAAV,wEAKfC,EAA2B9B,IAAOC,IAAV,0J,OCsBtBe,eAJS,SAAChC,EAAO+C,GAAR,MAAsB,CAC5CC,WAAYtC,YAAiBqC,EAASE,MAAMC,OAAOC,aAAvCzC,CAAqDV,MAGpDgC,EApBQ,SAAC,GAAoB,IAAlBgB,EAAiB,EAAjBA,WAChBI,EAAiBJ,EAAjBI,MAAOC,EAAUL,EAAVK,MACPf,EAAMC,cAAND,EAER,OACE,eAACK,EAAD,WACE,cAACC,EAAD,UAAkBN,EAAE,GAAD,OAAIc,MACvB,cAACN,EAAD,UACGO,EAAM7C,KAAI,SAAA2B,GAAI,OACb,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKmB,eCf9BC,EAAkBC,YAAyB,CAC/CnC,UAAW,SAAArB,GAAK,OAAKc,YAA0Bd,MAG3C2C,EAA0Bc,YAC9BzB,YAAQuB,GACRpC,IAF8BsC,CAG9BC,GAEaf","file":"static/js/6.3117eaf3.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    )\r\n      : (\r\n        <WrappedComponent {...otherProps} />\r\n        );\r\n  };\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n        width: 40vw;\r\n    }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n        display: block;\r\n        font-size: 10px;\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{t(`${name}`)}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        {t('Add to cart')}\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{t(`${title}`)}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n"],"sourceRoot":""}